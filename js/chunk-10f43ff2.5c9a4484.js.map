{"version":3,"sources":["webpack:///./node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-tooltip.js","webpack:///./node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-popper.js","webpack:///./node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-tooltip-template.js","webpack:///./node_modules/bootstrap-vue/esm/utils/noop.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","value","configurable","writable","MODAL_SELECTOR","ROOT_EVENT_NAME_MODAL_HIDDEN","SIDEBAR_SELECTOR","CONTAINER_SELECTOR","join","DROPDOWN_CLASS","DROPDOWN_OPEN_SELECTOR","DATA_TITLE_ATTR","templateData","title","content","variant","customClass","triggers","placement","fallbackPlacement","container","noFade","boundary","boundaryPadding","offset","delay","arrowPadding","interactive","disabled","id","html","BVTooltip","extend","name","mixins","data","activeTrigger","hover","click","focus","localShow","computed","templateType","computedId","this","concat","computedDelay","show","hide","computedTriggers","trim","toLowerCase","split","sort","isWithActiveTrigger","trigger","computedTemplateData","watch","newTriggers","oldTriggers","_this","$nextTick","unListen","listen","handleTemplateUpdate","newValue","oldValue","disable","enable","created","_this2","$_tip","$_hoverTimeout","$_hoverState","$_visibleInterval","$_enabled","$_noop","bind","$parent","$once","$destroy","getTarget","document","body","scopeId","updated","deactivated","forceHide","beforeDestroy","setWhileOpenListeners","clearHoverTimeout","clearVisibilityInterval","destroyTemplate","methods","getTemplate","updateData","_this3","undefined","titleUpdated","prop","fixTitle","createTemplateAndShow","getContainer","Template","$tip","parent","propsData","getPlacementTarget","getBoundary","onTemplateShow","onTemplateShown","onTemplateHide","onTemplateHidden","$on","handleEvent","$mount","appendChild","createElement","hideTemplate","clearActiveTriggers","localPlacementTarget","_unused","removeAriaDescribedby","restoreTitle","getTemplateElement","$el","_this4","props","dropdownOpen","showEvt","buildEvent","cancelable","emitEvent","defaultPrevented","addAriaDescribedby","force","tip","hideEvt","prevHoverState","leave","replace","getTargetId","isInModal","isDropdown","clearTimeout","clearInterval","desc","_this5","d","type","options","relatedTarget","componentId","vueTarget","bvEvent","emitOnRoot","$emit","_this6","el","setRootListener","_this7","events","event","on","$root","method","doHide","doShow","doDisable","doEnable","setModalListener","setDropdownListener","visibleCheck","setOnTouchStartListener","_this8","setInterval","parentNode","_this9","documentElement","children","__vue__","enter","eventTarget","currentTarget","toggle","_this10","setTimeout","_this11","AttachmentMap","AUTO","TOP","RIGHT","BOTTOM","LEFT","TOPLEFT","TOPRIGHT","RIGHTTOP","RIGHTBOTTOM","BOTTOMLEFT","BOTTOMRIGHT","LEFTTOP","LEFTBOTTOM","OffsetMap","BVPopper","attachment","getAttachment","popperConfig","modifiers","getOffset","flip","behavior","arrow","element","preventOverflow","padding","boundariesElement","onCreate","originalPlacement","popperPlacementChange","onUpdate","$_popper","popperCreate","handleDestroy","beforeMount","updatePopper","destroyPopper","destroyed","removeChild","String","toUpperCase","$refs","arrowOffset","width","destroy","scheduleUpdate","renderTemplate","h","render","appear","beforeEnter","afterEnter","beforeLeave","afterLeave","BVTooltipTemplate","extends","templateClasses","_ref","noninteractive","templateAttributes","$attrs","role","tabindex","scopedStyleAttrs","templateListeners","mouseenter","mouseleave","focusin","focusout","$title","domProps","innerHTML","staticClass","class","attrs","ref","noop"],"mappings":"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","file":"js/chunk-10f43ff2.5c9a4484.js","sourcesContent":["function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// Tooltip \"Class\" (Built as a renderless Vue instance)\n//\n// Handles trigger events, etc.\n// Instantiates template on demand\nimport { COMPONENT_UID_KEY, Vue } from '../../../vue';\nimport { NAME_MODAL, NAME_TOOLTIP_HELPER } from '../../../constants/components';\nimport { EVENT_NAME_DISABLE, EVENT_NAME_DISABLED, EVENT_NAME_ENABLE, EVENT_NAME_ENABLED, EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT, EVENT_NAME_HIDDEN, EVENT_NAME_HIDE, EVENT_NAME_MOUSEENTER, EVENT_NAME_MOUSELEAVE, EVENT_NAME_SHOW, EVENT_NAME_SHOWN, EVENT_OPTIONS_NO_CAPTURE, HOOK_EVENT_NAME_BEFORE_DESTROY, HOOK_EVENT_NAME_DESTROYED } from '../../../constants/events';\nimport { arrayIncludes, concat, from as arrayFrom } from '../../../utils/array';\nimport { attemptFocus, closest, contains, getAttr, getById, hasAttr, hasClass, isDisabled, isElement, isVisible, removeAttr, requestAF, select, setAttr } from '../../../utils/dom';\nimport { eventOff, eventOn, eventOnOff, getRootActionEventName, getRootEventName } from '../../../utils/events';\nimport { getScopeId } from '../../../utils/get-scope-id';\nimport { identity } from '../../../utils/identity';\nimport { isFunction, isNumber, isPlainObject, isString, isUndefined, isUndefinedOrNull } from '../../../utils/inspect';\nimport { looseEqual } from '../../../utils/loose-equal';\nimport { mathMax } from '../../../utils/math';\nimport { noop } from '../../../utils/noop';\nimport { toInteger } from '../../../utils/number';\nimport { keys } from '../../../utils/object';\nimport { warn } from '../../../utils/warn';\nimport { BvEvent } from '../../../utils/bv-event.class';\nimport { listenOnRootMixin } from '../../../mixins/listen-on-root';\nimport { BVTooltipTemplate } from './bv-tooltip-template'; // --- Constants ---\n// Modal container selector for appending tooltip/popover\n\nvar MODAL_SELECTOR = '.modal-content'; // Modal `$root` hidden event\n\nvar ROOT_EVENT_NAME_MODAL_HIDDEN = getRootEventName(NAME_MODAL, EVENT_NAME_HIDDEN); // Sidebar container selector for appending tooltip/popover\n\nvar SIDEBAR_SELECTOR = '.b-sidebar'; // For finding the container to append to\n\nvar CONTAINER_SELECTOR = [MODAL_SELECTOR, SIDEBAR_SELECTOR].join(', '); // For dropdown sniffing\n\nvar DROPDOWN_CLASS = 'dropdown';\nvar DROPDOWN_OPEN_SELECTOR = '.dropdown-menu.show'; // Data attribute to temporary store the `title` attribute's value\n\nvar DATA_TITLE_ATTR = 'data-original-title'; // Data specific to popper and template\n// We don't use props, as we need reactivity (we can't pass reactive props)\n\nvar templateData = {\n  // Text string or Scoped slot function\n  title: '',\n  // Text string or Scoped slot function\n  content: '',\n  // String\n  variant: null,\n  // String, Array, Object\n  customClass: null,\n  // String or array of Strings (overwritten by BVPopper)\n  triggers: '',\n  // String (overwritten by BVPopper)\n  placement: 'auto',\n  // String or array of strings\n  fallbackPlacement: 'flip',\n  // Element or Component reference (or function that returns element) of\n  // the element that will have the trigger events bound, and is also\n  // default element for positioning\n  target: null,\n  // HTML ID, Element or Component reference\n  container: null,\n  // 'body'\n  // Boolean\n  noFade: false,\n  // 'scrollParent', 'viewport', 'window', Element, or Component reference\n  boundary: 'scrollParent',\n  // Tooltip/popover will try and stay away from\n  // boundary edge by this many pixels (Number)\n  boundaryPadding: 5,\n  // Arrow offset (Number)\n  offset: 0,\n  // Hover/focus delay (Number or Object)\n  delay: 0,\n  // Arrow of Tooltip/popover will try and stay away from\n  // the edge of tooltip/popover edge by this many pixels\n  arrowPadding: 6,\n  // Interactive state (Boolean)\n  interactive: true,\n  // Disabled state (Boolean)\n  disabled: false,\n  // ID to use for tooltip/popover\n  id: null,\n  // Flag used by directives only, for HTML content\n  html: false\n}; // --- Main component ---\n// @vue/component\n\nexport var BVTooltip = /*#__PURE__*/Vue.extend({\n  name: NAME_TOOLTIP_HELPER,\n  mixins: [listenOnRootMixin],\n  data: function data() {\n    return _objectSpread(_objectSpread({}, templateData), {}, {\n      // State management data\n      activeTrigger: {\n        // manual: false,\n        hover: false,\n        click: false,\n        focus: false\n      },\n      localShow: false\n    });\n  },\n  computed: {\n    templateType: function templateType() {\n      // Overwritten by BVPopover\n      return 'tooltip';\n    },\n    computedId: function computedId() {\n      return this.id || \"__bv_\".concat(this.templateType, \"_\").concat(this[COMPONENT_UID_KEY], \"__\");\n    },\n    computedDelay: function computedDelay() {\n      // Normalizes delay into object form\n      var delay = {\n        show: 0,\n        hide: 0\n      };\n\n      if (isPlainObject(this.delay)) {\n        delay.show = mathMax(toInteger(this.delay.show, 0), 0);\n        delay.hide = mathMax(toInteger(this.delay.hide, 0), 0);\n      } else if (isNumber(this.delay) || isString(this.delay)) {\n        delay.show = delay.hide = mathMax(toInteger(this.delay, 0), 0);\n      }\n\n      return delay;\n    },\n    computedTriggers: function computedTriggers() {\n      // Returns the triggers in sorted array form\n      // TODO: Switch this to object form for easier lookup\n      return concat(this.triggers).filter(identity).join(' ').trim().toLowerCase().split(/\\s+/).sort();\n    },\n    isWithActiveTrigger: function isWithActiveTrigger() {\n      for (var trigger in this.activeTrigger) {\n        if (this.activeTrigger[trigger]) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n    computedTemplateData: function computedTemplateData() {\n      var title = this.title,\n          content = this.content,\n          variant = this.variant,\n          customClass = this.customClass,\n          noFade = this.noFade,\n          interactive = this.interactive;\n      return {\n        title: title,\n        content: content,\n        variant: variant,\n        customClass: customClass,\n        noFade: noFade,\n        interactive: interactive\n      };\n    }\n  },\n  watch: {\n    computedTriggers: function computedTriggers(newTriggers, oldTriggers) {\n      var _this = this;\n\n      // Triggers have changed, so re-register them\n\n      /* istanbul ignore next */\n      if (!looseEqual(newTriggers, oldTriggers)) {\n        this.$nextTick(function () {\n          // Disable trigger listeners\n          _this.unListen(); // Clear any active triggers that are no longer in the list of triggers\n\n\n          oldTriggers.forEach(function (trigger) {\n            if (!arrayIncludes(newTriggers, trigger)) {\n              if (_this.activeTrigger[trigger]) {\n                _this.activeTrigger[trigger] = false;\n              }\n            }\n          }); // Re-enable the trigger listeners\n\n          _this.listen();\n        });\n      }\n    },\n    computedTemplateData: function computedTemplateData() {\n      // If any of the while open reactive \"props\" change,\n      // ensure that the template updates accordingly\n      this.handleTemplateUpdate();\n    },\n    title: function title(newValue, oldValue) {\n      // Make sure to hide the tooltip when the title is set empty\n      if (newValue !== oldValue && !newValue) {\n        this.hide();\n      }\n    },\n    disabled: function disabled(newValue) {\n      if (newValue) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    // Create non-reactive properties\n    this.$_tip = null;\n    this.$_hoverTimeout = null;\n    this.$_hoverState = '';\n    this.$_visibleInterval = null;\n    this.$_enabled = !this.disabled;\n    this.$_noop = noop.bind(this); // Destroy ourselves when the parent is destroyed\n\n    if (this.$parent) {\n      this.$parent.$once(HOOK_EVENT_NAME_BEFORE_DESTROY, function () {\n        _this2.$nextTick(function () {\n          // In a `requestAF()` to release control back to application\n          requestAF(function () {\n            _this2.$destroy();\n          });\n        });\n      });\n    }\n\n    this.$nextTick(function () {\n      var target = _this2.getTarget();\n\n      if (target && contains(document.body, target)) {\n        // Copy the parent's scoped style attribute\n        _this2.scopeId = getScopeId(_this2.$parent); // Set up all trigger handlers and listeners\n\n        _this2.listen();\n      } else {\n        /* istanbul ignore next */\n        warn(isString(_this2.target) ? \"Unable to find target element by ID \\\"#\".concat(_this2.target, \"\\\" in document.\") : 'The provided target is no valid HTML element.', _this2.templateType);\n      }\n    });\n  },\n\n  /* istanbul ignore next */\n  updated: function updated() {\n    // Usually called when the slots/data changes\n    this.$nextTick(this.handleTemplateUpdate);\n  },\n\n  /* istanbul ignore next */\n  deactivated: function deactivated() {\n    // In a keepalive that has been deactivated, so hide\n    // the tooltip/popover if it is showing\n    this.forceHide();\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Remove all handler/listeners\n    this.unListen();\n    this.setWhileOpenListeners(false); // Clear any timeouts/intervals\n\n    this.clearHoverTimeout();\n    this.clearVisibilityInterval(); // Destroy the template\n\n    this.destroyTemplate(); // Remove any other private properties created during create\n\n    this.$_noop = null;\n  },\n  methods: {\n    // --- Methods for creating and destroying the template ---\n    getTemplate: function getTemplate() {\n      // Overridden by BVPopover\n      return BVTooltipTemplate;\n    },\n    updateData: function updateData() {\n      var _this3 = this;\n\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      // Method for updating popper/template data\n      // We only update data if it exists, and has not changed\n      var titleUpdated = false;\n      keys(templateData).forEach(function (prop) {\n        if (!isUndefined(data[prop]) && _this3[prop] !== data[prop]) {\n          _this3[prop] = data[prop];\n\n          if (prop === 'title') {\n            titleUpdated = true;\n          }\n        }\n      }); // If the title has updated, we may need to handle the `title`\n      // attribute on the trigger target\n      // We only do this while the template is open\n\n      if (titleUpdated && this.localShow) {\n        this.fixTitle();\n      }\n    },\n    createTemplateAndShow: function createTemplateAndShow() {\n      // Creates the template instance and show it\n      var container = this.getContainer();\n      var Template = this.getTemplate();\n      var $tip = this.$_tip = new Template({\n        parent: this,\n        // The following is not reactive to changes in the props data\n        propsData: {\n          // These values cannot be changed while template is showing\n          id: this.computedId,\n          html: this.html,\n          placement: this.placement,\n          fallbackPlacement: this.fallbackPlacement,\n          target: this.getPlacementTarget(),\n          boundary: this.getBoundary(),\n          // Ensure the following are integers\n          offset: toInteger(this.offset, 0),\n          arrowPadding: toInteger(this.arrowPadding, 0),\n          boundaryPadding: toInteger(this.boundaryPadding, 0)\n        }\n      }); // We set the initial reactive data (values that can be changed while open)\n\n      this.handleTemplateUpdate(); // Template transition phase events (handled once only)\n      // When the template has mounted, but not visibly shown yet\n\n      $tip.$once(EVENT_NAME_SHOW, this.onTemplateShow); // When the template has completed showing\n\n      $tip.$once(EVENT_NAME_SHOWN, this.onTemplateShown); // When the template has started to hide\n\n      $tip.$once(EVENT_NAME_HIDE, this.onTemplateHide); // When the template has completed hiding\n\n      $tip.$once(EVENT_NAME_HIDDEN, this.onTemplateHidden); // When the template gets destroyed for any reason\n\n      $tip.$once(HOOK_EVENT_NAME_DESTROYED, this.destroyTemplate); // Convenience events from template\n      // To save us from manually adding/removing DOM\n      // listeners to tip element when it is open\n\n      $tip.$on(EVENT_NAME_FOCUSIN, this.handleEvent);\n      $tip.$on(EVENT_NAME_FOCUSOUT, this.handleEvent);\n      $tip.$on(EVENT_NAME_MOUSEENTER, this.handleEvent);\n      $tip.$on(EVENT_NAME_MOUSELEAVE, this.handleEvent); // Mount (which triggers the `show`)\n\n      $tip.$mount(container.appendChild(document.createElement('div'))); // Template will automatically remove its markup from DOM when hidden\n    },\n    hideTemplate: function hideTemplate() {\n      // Trigger the template to start hiding\n      // The template will emit the `hide` event after this and\n      // then emit the `hidden` event once it is fully hidden\n      // The `hook:destroyed` will also be called (safety measure)\n      this.$_tip && this.$_tip.hide(); // Clear out any stragging active triggers\n\n      this.clearActiveTriggers(); // Reset the hover state\n\n      this.$_hoverState = '';\n    },\n    // Destroy the template instance and reset state\n    destroyTemplate: function destroyTemplate() {\n      this.setWhileOpenListeners(false);\n      this.clearHoverTimeout();\n      this.$_hoverState = '';\n      this.clearActiveTriggers();\n      this.localPlacementTarget = null;\n\n      try {\n        this.$_tip.$destroy();\n      } catch (_unused) {}\n\n      this.$_tip = null;\n      this.removeAriaDescribedby();\n      this.restoreTitle();\n      this.localShow = false;\n    },\n    getTemplateElement: function getTemplateElement() {\n      return this.$_tip ? this.$_tip.$el : null;\n    },\n    handleTemplateUpdate: function handleTemplateUpdate() {\n      var _this4 = this;\n\n      // Update our template title/content \"props\"\n      // So that the template updates accordingly\n      var $tip = this.$_tip;\n\n      if ($tip) {\n        var props = ['title', 'content', 'variant', 'customClass', 'noFade', 'interactive']; // Only update the values if they have changed\n\n        props.forEach(function (prop) {\n          if ($tip[prop] !== _this4[prop]) {\n            $tip[prop] = _this4[prop];\n          }\n        });\n      }\n    },\n    // --- Show/Hide handlers ---\n    // Show the tooltip\n    show: function show() {\n      var target = this.getTarget();\n\n      if (!target || !contains(document.body, target) || !isVisible(target) || this.dropdownOpen() || (isUndefinedOrNull(this.title) || this.title === '') && (isUndefinedOrNull(this.content) || this.content === '')) {\n        // If trigger element isn't in the DOM or is not visible, or\n        // is on an open dropdown toggle, or has no content, then\n        // we exit without showing\n        return;\n      } // If tip already exists, exit early\n\n\n      if (this.$_tip || this.localShow) {\n        /* istanbul ignore next */\n        return;\n      } // In the process of showing\n\n\n      this.localShow = true; // Create a cancelable BvEvent\n\n      var showEvt = this.buildEvent(EVENT_NAME_SHOW, {\n        cancelable: true\n      });\n      this.emitEvent(showEvt); // Don't show if event cancelled\n\n      /* istanbul ignore if */\n\n      if (showEvt.defaultPrevented) {\n        // Destroy the template (if for some reason it was created)\n        this.destroyTemplate();\n        return;\n      } // Fix the title attribute on target\n\n\n      this.fixTitle(); // Set aria-describedby on target\n\n      this.addAriaDescribedby(); // Create and show the tooltip\n\n      this.createTemplateAndShow();\n    },\n    hide: function hide() {\n      var force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      // Hide the tooltip\n      var tip = this.getTemplateElement();\n      /* istanbul ignore if */\n\n      if (!tip || !this.localShow) {\n        this.restoreTitle();\n        return;\n      } // Emit cancelable BvEvent 'hide'\n      // We disable cancelling if `force` is true\n\n\n      var hideEvt = this.buildEvent(EVENT_NAME_HIDE, {\n        cancelable: !force\n      });\n      this.emitEvent(hideEvt);\n      /* istanbul ignore if: ignore for now */\n\n      if (hideEvt.defaultPrevented) {\n        // Don't hide if event cancelled\n        return;\n      } // Tell the template to hide\n\n\n      this.hideTemplate();\n    },\n    forceHide: function forceHide() {\n      // Forcefully hides/destroys the template, regardless of any active triggers\n      var tip = this.getTemplateElement();\n\n      if (!tip || !this.localShow) {\n        /* istanbul ignore next */\n        return;\n      } // Disable while open listeners/watchers\n      // This is also done in the template `hide` event handler\n\n\n      this.setWhileOpenListeners(false); // Clear any hover enter/leave event\n\n      this.clearHoverTimeout();\n      this.$_hoverState = '';\n      this.clearActiveTriggers(); // Disable the fade animation on the template\n\n      if (this.$_tip) {\n        this.$_tip.noFade = true;\n      } // Hide the tip (with force = true)\n\n\n      this.hide(true);\n    },\n    enable: function enable() {\n      this.$_enabled = true; // Create a non-cancelable BvEvent\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_ENABLED));\n    },\n    disable: function disable() {\n      this.$_enabled = false; // Create a non-cancelable BvEvent\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_DISABLED));\n    },\n    // --- Handlers for template events ---\n    // When template is inserted into DOM, but not yet shown\n    onTemplateShow: function onTemplateShow() {\n      // Enable while open listeners/watchers\n      this.setWhileOpenListeners(true);\n    },\n    // When template show transition completes\n    onTemplateShown: function onTemplateShown() {\n      var prevHoverState = this.$_hoverState;\n      this.$_hoverState = '';\n      /* istanbul ignore next: occasional Node 10 coverage error */\n\n      if (prevHoverState === 'out') {\n        this.leave(null);\n      } // Emit a non-cancelable BvEvent 'shown'\n\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_SHOWN));\n    },\n    // When template is starting to hide\n    onTemplateHide: function onTemplateHide() {\n      // Disable while open listeners/watchers\n      this.setWhileOpenListeners(false);\n    },\n    // When template has completed closing (just before it self destructs)\n    onTemplateHidden: function onTemplateHidden() {\n      // Destroy the template\n      this.destroyTemplate(); // Emit a non-cancelable BvEvent 'shown'\n\n      this.emitEvent(this.buildEvent(EVENT_NAME_HIDDEN));\n    },\n    // --- Helper methods ---\n    getTarget: function getTarget() {\n      var target = this.target;\n\n      if (isString(target)) {\n        target = getById(target.replace(/^#/, ''));\n      } else if (isFunction(target)) {\n        target = target();\n      } else if (target) {\n        target = target.$el || target;\n      }\n\n      return isElement(target) ? target : null;\n    },\n    getPlacementTarget: function getPlacementTarget() {\n      // This is the target that the tooltip will be placed on, which may not\n      // necessarily be the same element that has the trigger event listeners\n      // For now, this is the same as target\n      // TODO:\n      //   Add in child selector support\n      //   Add in visibility checks for this element\n      //   Fallback to target if not found\n      return this.getTarget();\n    },\n    getTargetId: function getTargetId() {\n      // Returns the ID of the trigger element\n      var target = this.getTarget();\n      return target && target.id ? target.id : null;\n    },\n    getContainer: function getContainer() {\n      // Handle case where container may be a component ref\n      var container = this.container ? this.container.$el || this.container : false;\n      var body = document.body;\n      var target = this.getTarget(); // If we are in a modal, we append to the modal, If we\n      // are in a sidebar, we append to the sidebar, else append\n      // to body, unless a container is specified\n      // TODO:\n      //   Template should periodically check to see if it is in dom\n      //   And if not, self destruct (if container got v-if'ed out of DOM)\n      //   Or this could possibly be part of the visibility check\n\n      return container === false ? closest(CONTAINER_SELECTOR, target) || body :\n      /*istanbul ignore next */\n      isString(container) ?\n      /*istanbul ignore next */\n      getById(container.replace(/^#/, '')) || body :\n      /*istanbul ignore next */\n      body;\n    },\n    getBoundary: function getBoundary() {\n      return this.boundary ? this.boundary.$el || this.boundary : 'scrollParent';\n    },\n    isInModal: function isInModal() {\n      var target = this.getTarget();\n      return target && closest(MODAL_SELECTOR, target);\n    },\n    isDropdown: function isDropdown() {\n      // Returns true if trigger is a dropdown\n      var target = this.getTarget();\n      return target && hasClass(target, DROPDOWN_CLASS);\n    },\n    dropdownOpen: function dropdownOpen() {\n      // Returns true if trigger is a dropdown and the dropdown menu is open\n      var target = this.getTarget();\n      return this.isDropdown() && target && select(DROPDOWN_OPEN_SELECTOR, target);\n    },\n    clearHoverTimeout: function clearHoverTimeout() {\n      clearTimeout(this.$_hoverTimeout);\n      this.$_hoverTimeout = null;\n    },\n    clearVisibilityInterval: function clearVisibilityInterval() {\n      clearInterval(this.$_visibleInterval);\n      this.$_visibleInterval = null;\n    },\n    clearActiveTriggers: function clearActiveTriggers() {\n      for (var trigger in this.activeTrigger) {\n        this.activeTrigger[trigger] = false;\n      }\n    },\n    addAriaDescribedby: function addAriaDescribedby() {\n      // Add aria-describedby on trigger element, without removing any other IDs\n      var target = this.getTarget();\n      var desc = getAttr(target, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).concat(this.computedId).join(' ').trim(); // Update/add aria-described by\n\n      setAttr(target, 'aria-describedby', desc);\n    },\n    removeAriaDescribedby: function removeAriaDescribedby() {\n      var _this5 = this;\n\n      // Remove aria-describedby on trigger element, without removing any other IDs\n      var target = this.getTarget();\n      var desc = getAttr(target, 'aria-describedby') || '';\n      desc = desc.split(/\\s+/).filter(function (d) {\n        return d !== _this5.computedId;\n      }).join(' ').trim(); // Update or remove aria-describedby\n\n      if (desc) {\n        /* istanbul ignore next */\n        setAttr(target, 'aria-describedby', desc);\n      } else {\n        removeAttr(target, 'aria-describedby');\n      }\n    },\n    fixTitle: function fixTitle() {\n      // If the target has a `title` attribute,\n      // remove it and store it on a data attribute\n      var target = this.getTarget();\n\n      if (hasAttr(target, 'title')) {\n        // Get `title` attribute value and remove it from target\n        var title = getAttr(target, 'title');\n        setAttr(target, 'title', ''); // Only set the data attribute when the value is truthy\n\n        if (title) {\n          setAttr(target, DATA_TITLE_ATTR, title);\n        }\n      }\n    },\n    restoreTitle: function restoreTitle() {\n      // If the target had a `title` attribute,\n      // restore it and remove the data attribute\n      var target = this.getTarget();\n\n      if (hasAttr(target, DATA_TITLE_ATTR)) {\n        // Get data attribute value and remove it from target\n        var title = getAttr(target, DATA_TITLE_ATTR);\n        removeAttr(target, DATA_TITLE_ATTR); // Only restore the `title` attribute when the value is truthy\n\n        if (title) {\n          setAttr(target, 'title', title);\n        }\n      }\n    },\n    // --- BvEvent helpers ---\n    buildEvent: function buildEvent(type) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      // Defaults to a non-cancellable event\n      return new BvEvent(type, _objectSpread({\n        cancelable: false,\n        target: this.getTarget(),\n        relatedTarget: this.getTemplateElement() || null,\n        componentId: this.computedId,\n        vueTarget: this\n      }, options));\n    },\n    emitEvent: function emitEvent(bvEvent) {\n      var type = bvEvent.type;\n      this.emitOnRoot(getRootEventName(this.templateType, type), bvEvent);\n      this.$emit(type, bvEvent);\n    },\n    // --- Event handler setup methods ---\n    listen: function listen() {\n      var _this6 = this;\n\n      // Enable trigger event handlers\n      var el = this.getTarget();\n\n      if (!el) {\n        /* istanbul ignore next */\n        return;\n      } // Listen for global show/hide events\n\n\n      this.setRootListener(true); // Set up our listeners on the target trigger element\n\n      this.computedTriggers.forEach(function (trigger) {\n        if (trigger === 'click') {\n          eventOn(el, 'click', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        } else if (trigger === 'focus') {\n          eventOn(el, 'focusin', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n          eventOn(el, 'focusout', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        } else if (trigger === 'blur') {\n          // Used to close $tip when element looses focus\n\n          /* istanbul ignore next */\n          eventOn(el, 'focusout', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        } else if (trigger === 'hover') {\n          eventOn(el, 'mouseenter', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n          eventOn(el, 'mouseleave', _this6.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n        }\n      }, this);\n    },\n\n    /* istanbul ignore next */\n    unListen: function unListen() {\n      var _this7 = this;\n\n      // Remove trigger event handlers\n      var events = ['click', 'focusin', 'focusout', 'mouseenter', 'mouseleave'];\n      var target = this.getTarget(); // Stop listening for global show/hide/enable/disable events\n\n      this.setRootListener(false); // Clear out any active target listeners\n\n      events.forEach(function (event) {\n        target && eventOff(target, event, _this7.handleEvent, EVENT_OPTIONS_NO_CAPTURE);\n      }, this);\n    },\n    setRootListener: function setRootListener(on) {\n      // Listen for global `bv::{hide|show}::{tooltip|popover}` hide request event\n      var $root = this.$root;\n\n      if ($root) {\n        var method = on ? '$on' : '$off';\n        var type = this.templateType;\n        $root[method](getRootActionEventName(type, EVENT_NAME_HIDE), this.doHide);\n        $root[method](getRootActionEventName(type, EVENT_NAME_SHOW), this.doShow);\n        $root[method](getRootActionEventName(type, EVENT_NAME_DISABLE), this.doDisable);\n        $root[method](getRootActionEventName(type, EVENT_NAME_ENABLE), this.doEnable);\n      }\n    },\n    setWhileOpenListeners: function setWhileOpenListeners(on) {\n      // Events that are only registered when the template is showing\n      // Modal close events\n      this.setModalListener(on); // Dropdown open events (if we are attached to a dropdown)\n\n      this.setDropdownListener(on); // Periodic $element visibility check\n      // For handling when tip target is in <keepalive>, tabs, carousel, etc\n\n      this.visibleCheck(on); // On-touch start listeners\n\n      this.setOnTouchStartListener(on);\n    },\n    // Handler for periodic visibility check\n    visibleCheck: function visibleCheck(on) {\n      var _this8 = this;\n\n      this.clearVisibilityInterval();\n      var target = this.getTarget();\n      var tip = this.getTemplateElement();\n\n      if (on) {\n        this.$_visibleInterval = setInterval(function () {\n          if (tip && _this8.localShow && (!target.parentNode || !isVisible(target))) {\n            // Target element is no longer visible or not in DOM, so force-hide the tooltip\n            _this8.forceHide();\n          }\n        }, 100);\n      }\n    },\n    setModalListener: function setModalListener(on) {\n      // Handle case where tooltip/target is in a modal\n      if (this.isInModal()) {\n        // We can listen for modal hidden events on `$root`\n        this.$root[on ? '$on' : '$off'](ROOT_EVENT_NAME_MODAL_HIDDEN, this.forceHide);\n      }\n    },\n\n    /* istanbul ignore next: JSDOM doesn't support `ontouchstart` */\n    setOnTouchStartListener: function setOnTouchStartListener(on) {\n      var _this9 = this;\n\n      // If this is a touch-enabled device we add extra empty\n      // `mouseover` listeners to the body's immediate children\n      // Only needed because of broken event delegation on iOS\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n      if ('ontouchstart' in document.documentElement) {\n        arrayFrom(document.body.children).forEach(function (el) {\n          eventOnOff(on, el, 'mouseover', _this9.$_noop);\n        });\n      }\n    },\n    setDropdownListener: function setDropdownListener(on) {\n      var target = this.getTarget();\n\n      if (!target || !this.$root || !this.isDropdown) {\n        return;\n      } // We can listen for dropdown shown events on its instance\n      // TODO:\n      //   We could grab the ID from the dropdown, and listen for\n      //   $root events for that particular dropdown id\n      //   Dropdown shown and hidden events will need to emit\n      //   Note: Dropdown auto-ID happens in a `$nextTick()` after mount\n      //         So the ID lookup would need to be done in a `$nextTick()`\n\n\n      if (target.__vue__) {\n        target.__vue__[on ? '$on' : '$off'](EVENT_NAME_SHOWN, this.forceHide);\n      }\n    },\n    // --- Event handlers ---\n    handleEvent: function handleEvent(event) {\n      // General trigger event handler\n      // target is the trigger element\n      var target = this.getTarget();\n\n      if (!target || isDisabled(target) || !this.$_enabled || this.dropdownOpen()) {\n        // If disabled or not enabled, or if a dropdown that is open, don't do anything\n        // If tip is shown before element gets disabled, then tip will not\n        // close until no longer disabled or forcefully closed\n        return;\n      }\n\n      var type = event.type;\n      var triggers = this.computedTriggers;\n\n      if (type === 'click' && arrayIncludes(triggers, 'click')) {\n        this.click(event);\n      } else if (type === 'mouseenter' && arrayIncludes(triggers, 'hover')) {\n        // `mouseenter` is a non-bubbling event\n        this.enter(event);\n      } else if (type === 'focusin' && arrayIncludes(triggers, 'focus')) {\n        // `focusin` is a bubbling event\n        // `event` includes `relatedTarget` (element losing focus)\n        this.enter(event);\n      } else if (type === 'focusout' && (arrayIncludes(triggers, 'focus') || arrayIncludes(triggers, 'blur')) || type === 'mouseleave' && arrayIncludes(triggers, 'hover')) {\n        // `focusout` is a bubbling event\n        // `mouseleave` is a non-bubbling event\n        // `tip` is the template (will be null if not open)\n        var tip = this.getTemplateElement(); // `eventTarget` is the element which is losing focus/hover and\n\n        var eventTarget = event.target; // `relatedTarget` is the element gaining focus/hover\n\n        var relatedTarget = event.relatedTarget;\n        /* istanbul ignore next */\n\n        if ( // From tip to target\n        tip && contains(tip, eventTarget) && contains(target, relatedTarget) || // From target to tip\n        tip && contains(target, eventTarget) && contains(tip, relatedTarget) || // Within tip\n        tip && contains(tip, eventTarget) && contains(tip, relatedTarget) || // Within target\n        contains(target, eventTarget) && contains(target, relatedTarget)) {\n          // If focus/hover moves within `tip` and `target`, don't trigger a leave\n          return;\n        } // Otherwise trigger a leave\n\n\n        this.leave(event);\n      }\n    },\n    doHide: function doHide(id) {\n      // Programmatically hide tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Close all tooltips or popovers, or this specific tip (with ID)\n        this.forceHide();\n      }\n    },\n    doShow: function doShow(id) {\n      // Programmatically show tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Open all tooltips or popovers, or this specific tip (with ID)\n        this.show();\n      }\n    },\n\n    /*istanbul ignore next: ignore for now */\n    doDisable: function doDisable(id)\n    /*istanbul ignore next: ignore for now */\n    {\n      // Programmatically disable tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Disable all tooltips or popovers (no ID), or this specific tip (with ID)\n        this.disable();\n      }\n    },\n\n    /*istanbul ignore next: ignore for now */\n    doEnable: function doEnable(id)\n    /*istanbul ignore next: ignore for now */\n    {\n      // Programmatically enable tooltip or popover\n      if (!id || this.getTargetId() === id || this.computedId === id) {\n        // Enable all tooltips or popovers (no ID), or this specific tip (with ID)\n        this.enable();\n      }\n    },\n    click: function click(event) {\n      if (!this.$_enabled || this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      } // Get around a WebKit bug where `click` does not trigger focus events\n      // On most browsers, `click` triggers a `focusin`/`focus` event first\n      // Needed so that trigger 'click blur' works on iOS\n      // https://github.com/bootstrap-vue/bootstrap-vue/issues/5099\n      // We use `currentTarget` rather than `target` to trigger on the\n      // element, not the inner content\n\n\n      attemptFocus(event.currentTarget);\n      this.activeTrigger.click = !this.activeTrigger.click;\n\n      if (this.isWithActiveTrigger) {\n        this.enter(null);\n      } else {\n        /* istanbul ignore next */\n        this.leave(null);\n      }\n    },\n\n    /* istanbul ignore next */\n    toggle: function toggle() {\n      // Manual toggle handler\n      if (!this.$_enabled || this.dropdownOpen()) {\n        /* istanbul ignore next */\n        return;\n      } // Should we register as an active trigger?\n      // this.activeTrigger.manual = !this.activeTrigger.manual\n\n\n      if (this.localShow) {\n        this.leave(null);\n      } else {\n        this.enter(null);\n      }\n    },\n    enter: function enter() {\n      var _this10 = this;\n\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      // Opening trigger handler\n      // Note: Click events are sent with event === null\n      if (event) {\n        this.activeTrigger[event.type === 'focusin' ? 'focus' : 'hover'] = true;\n      }\n      /* istanbul ignore next */\n\n\n      if (this.localShow || this.$_hoverState === 'in') {\n        this.$_hoverState = 'in';\n        return;\n      }\n\n      this.clearHoverTimeout();\n      this.$_hoverState = 'in';\n\n      if (!this.computedDelay.show) {\n        this.show();\n      } else {\n        // Hide any title attribute while enter delay is active\n        this.fixTitle();\n        this.$_hoverTimeout = setTimeout(function () {\n          /* istanbul ignore else */\n          if (_this10.$_hoverState === 'in') {\n            _this10.show();\n          } else if (!_this10.localShow) {\n            _this10.restoreTitle();\n          }\n        }, this.computedDelay.show);\n      }\n    },\n    leave: function leave() {\n      var _this11 = this;\n\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      // Closing trigger handler\n      // Note: Click events are sent with event === null\n      if (event) {\n        this.activeTrigger[event.type === 'focusout' ? 'focus' : 'hover'] = false;\n        /* istanbul ignore next */\n\n        if (event.type === 'focusout' && arrayIncludes(this.computedTriggers, 'blur')) {\n          // Special case for `blur`: we clear out the other triggers\n          this.activeTrigger.click = false;\n          this.activeTrigger.hover = false;\n        }\n      }\n      /* istanbul ignore next: ignore for now */\n\n\n      if (this.isWithActiveTrigger) {\n        return;\n      }\n\n      this.clearHoverTimeout();\n      this.$_hoverState = 'out';\n\n      if (!this.computedDelay.hide) {\n        this.hide();\n      } else {\n        this.$_hoverTimeout = setTimeout(function () {\n          if (_this11.$_hoverState === 'out') {\n            _this11.hide();\n          }\n        }, this.computedDelay.hide);\n      }\n    }\n  }\n});","// Base on-demand component for tooltip / popover templates\n//\n// Currently:\n//   Responsible for positioning and transitioning the template\n//   Templates are only instantiated when shown, and destroyed when hidden\n//\nimport Popper from 'popper.js';\nimport { Vue } from '../../../vue';\nimport { NAME_POPPER } from '../../../constants/components';\nimport { EVENT_NAME_HIDDEN, EVENT_NAME_HIDE, EVENT_NAME_SHOW, EVENT_NAME_SHOWN, HOOK_EVENT_NAME_DESTROYED } from '../../../constants/events';\nimport { PROP_TYPE_ARRAY_STRING, PROP_TYPE_NUMBER_STRING, PROP_TYPE_STRING } from '../../../constants/props';\nimport { HTMLElement, SVGElement } from '../../../constants/safe-types';\nimport { getCS, requestAF, select } from '../../../utils/dom';\nimport { toFloat } from '../../../utils/number';\nimport { makeProp } from '../../../utils/props';\nimport { BVTransition } from '../../transition/bv-transition'; // --- Constants ---\n\nvar AttachmentMap = {\n  AUTO: 'auto',\n  TOP: 'top',\n  RIGHT: 'right',\n  BOTTOM: 'bottom',\n  LEFT: 'left',\n  TOPLEFT: 'top',\n  TOPRIGHT: 'top',\n  RIGHTTOP: 'right',\n  RIGHTBOTTOM: 'right',\n  BOTTOMLEFT: 'bottom',\n  BOTTOMRIGHT: 'bottom',\n  LEFTTOP: 'left',\n  LEFTBOTTOM: 'left'\n};\nvar OffsetMap = {\n  AUTO: 0,\n  TOPLEFT: -1,\n  TOP: 0,\n  TOPRIGHT: +1,\n  RIGHTTOP: -1,\n  RIGHT: 0,\n  RIGHTBOTTOM: +1,\n  BOTTOMLEFT: -1,\n  BOTTOM: 0,\n  BOTTOMRIGHT: +1,\n  LEFTTOP: -1,\n  LEFT: 0,\n  LEFTBOTTOM: +1\n}; // --- Props ---\n\nexport var props = {\n  // The minimum distance (in `px`) from the edge of the\n  // tooltip/popover that the arrow can be positioned\n  arrowPadding: makeProp(PROP_TYPE_NUMBER_STRING, 6),\n  // 'scrollParent', 'viewport', 'window', or `Element`\n  boundary: makeProp([HTMLElement, PROP_TYPE_STRING], 'scrollParent'),\n  // Tooltip/popover will try and stay away from\n  // boundary edge by this many pixels\n  boundaryPadding: makeProp(PROP_TYPE_NUMBER_STRING, 5),\n  fallbackPlacement: makeProp(PROP_TYPE_ARRAY_STRING, 'flip'),\n  offset: makeProp(PROP_TYPE_NUMBER_STRING, 0),\n  placement: makeProp(PROP_TYPE_STRING, 'top'),\n  // Element that the tooltip/popover is positioned relative to\n  target: makeProp([HTMLElement, SVGElement])\n}; // --- Main component ---\n// @vue/component\n\nexport var BVPopper = /*#__PURE__*/Vue.extend({\n  name: NAME_POPPER,\n  props: props,\n  data: function data() {\n    return {\n      // reactive props set by parent\n      noFade: false,\n      // State related data\n      localShow: true,\n      attachment: this.getAttachment(this.placement)\n    };\n  },\n  computed: {\n    /* istanbul ignore next */\n    templateType: function templateType() {\n      // Overridden by template component\n      return 'unknown';\n    },\n    popperConfig: function popperConfig() {\n      var _this = this;\n\n      var placement = this.placement;\n      return {\n        placement: this.getAttachment(placement),\n        modifiers: {\n          offset: {\n            offset: this.getOffset(placement)\n          },\n          flip: {\n            behavior: this.fallbackPlacement\n          },\n          // `arrow.element` can also be a reference to an HTML Element\n          // maybe we should make this a `$ref` in the templates?\n          arrow: {\n            element: '.arrow'\n          },\n          preventOverflow: {\n            padding: this.boundaryPadding,\n            boundariesElement: this.boundary\n          }\n        },\n        onCreate: function onCreate(data) {\n          // Handle flipping arrow classes\n          if (data.originalPlacement !== data.placement) {\n            /* istanbul ignore next: can't test in JSDOM */\n            _this.popperPlacementChange(data);\n          }\n        },\n        onUpdate: function onUpdate(data) {\n          // Handle flipping arrow classes\n          _this.popperPlacementChange(data);\n        }\n      };\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    // Note: We are created on-demand, and should be guaranteed that\n    // DOM is rendered/ready by the time the created hook runs\n    this.$_popper = null; // Ensure we show as we mount\n\n    this.localShow = true; // Create popper instance before shown\n\n    this.$on(EVENT_NAME_SHOW, function (el) {\n      _this2.popperCreate(el);\n    }); // Self destruct handler\n\n    var handleDestroy = function handleDestroy() {\n      _this2.$nextTick(function () {\n        // In a `requestAF()` to release control back to application\n        requestAF(function () {\n          _this2.$destroy();\n        });\n      });\n    }; // Self destruct if parent destroyed\n\n\n    this.$parent.$once(HOOK_EVENT_NAME_DESTROYED, handleDestroy); // Self destruct after hidden\n\n    this.$once(EVENT_NAME_HIDDEN, handleDestroy);\n  },\n  beforeMount: function beforeMount() {\n    // Ensure that the attachment position is correct before mounting\n    // as our propsData is added after `new Template({...})`\n    this.attachment = this.getAttachment(this.placement);\n  },\n  updated: function updated() {\n    // Update popper if needed\n    // TODO: Should this be a watcher on `this.popperConfig` instead?\n    this.updatePopper();\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.destroyPopper();\n  },\n  destroyed: function destroyed() {\n    // Make sure template is removed from DOM\n    var el = this.$el;\n    el && el.parentNode && el.parentNode.removeChild(el);\n  },\n  methods: {\n    // \"Public\" method to trigger hide template\n    hide: function hide() {\n      this.localShow = false;\n    },\n    // Private\n    getAttachment: function getAttachment(placement) {\n      return AttachmentMap[String(placement).toUpperCase()] || 'auto';\n    },\n    getOffset: function getOffset(placement) {\n      if (!this.offset) {\n        // Could set a ref for the arrow element\n        var arrow = this.$refs.arrow || select('.arrow', this.$el);\n        var arrowOffset = toFloat(getCS(arrow).width, 0) + toFloat(this.arrowPadding, 0);\n\n        switch (OffsetMap[String(placement).toUpperCase()] || 0) {\n          /* istanbul ignore next: can't test in JSDOM */\n          case +1:\n            /* istanbul ignore next: can't test in JSDOM */\n            return \"+50%p - \".concat(arrowOffset, \"px\");\n\n          /* istanbul ignore next: can't test in JSDOM */\n\n          case -1:\n            /* istanbul ignore next: can't test in JSDOM */\n            return \"-50%p + \".concat(arrowOffset, \"px\");\n\n          default:\n            return 0;\n        }\n      }\n      /* istanbul ignore next */\n\n\n      return this.offset;\n    },\n    popperCreate: function popperCreate(el) {\n      this.destroyPopper(); // We use `el` rather than `this.$el` just in case the original\n      // mountpoint root element type was changed by the template\n\n      this.$_popper = new Popper(this.target, el, this.popperConfig);\n    },\n    destroyPopper: function destroyPopper() {\n      this.$_popper && this.$_popper.destroy();\n      this.$_popper = null;\n    },\n    updatePopper: function updatePopper() {\n      this.$_popper && this.$_popper.scheduleUpdate();\n    },\n    popperPlacementChange: function popperPlacementChange(data) {\n      // Callback used by popper to adjust the arrow placement\n      this.attachment = this.getAttachment(data.placement);\n    },\n\n    /* istanbul ignore next */\n    renderTemplate: function renderTemplate(h) {\n      // Will be overridden by templates\n      return h('div');\n    }\n  },\n  render: function render(h) {\n    var _this3 = this;\n\n    var noFade = this.noFade; // Note: 'show' and 'fade' classes are only appled during transition\n\n    return h(BVTransition, {\n      // Transitions as soon as mounted\n      props: {\n        appear: true,\n        noFade: noFade\n      },\n      on: {\n        // Events used by parent component/instance\n        beforeEnter: function beforeEnter(el) {\n          return _this3.$emit(EVENT_NAME_SHOW, el);\n        },\n        afterEnter: function afterEnter(el) {\n          return _this3.$emit(EVENT_NAME_SHOWN, el);\n        },\n        beforeLeave: function beforeLeave(el) {\n          return _this3.$emit(EVENT_NAME_HIDE, el);\n        },\n        afterLeave: function afterLeave(el) {\n          return _this3.$emit(EVENT_NAME_HIDDEN, el);\n        }\n      }\n    }, [this.localShow ? this.renderTemplate(h) : h()]);\n  }\n});","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Vue } from '../../../vue';\nimport { NAME_TOOLTIP_TEMPLATE } from '../../../constants/components';\nimport { EVENT_NAME_FOCUSIN, EVENT_NAME_FOCUSOUT, EVENT_NAME_MOUSEENTER, EVENT_NAME_MOUSELEAVE } from '../../../constants/events';\nimport { PROP_TYPE_BOOLEAN, PROP_TYPE_STRING } from '../../../constants/props';\nimport { isFunction } from '../../../utils/inspect';\nimport { makeProp } from '../../../utils/props';\nimport { scopedStyleMixin } from '../../../mixins/scoped-style';\nimport { BVPopper } from './bv-popper'; // --- Props ---\n\nexport var props = {\n  // Used only by the directive versions\n  html: makeProp(PROP_TYPE_BOOLEAN, false),\n  // Other non-reactive (while open) props are pulled in from BVPopper\n  id: makeProp(PROP_TYPE_STRING)\n}; // --- Main component ---\n// @vue/component\n\nexport var BVTooltipTemplate = /*#__PURE__*/Vue.extend({\n  name: NAME_TOOLTIP_TEMPLATE,\n  extends: BVPopper,\n  mixins: [scopedStyleMixin],\n  props: props,\n  data: function data() {\n    // We use data, rather than props to ensure reactivity\n    // Parent component will directly set this data\n    return {\n      title: '',\n      content: '',\n      variant: null,\n      customClass: null,\n      interactive: true\n    };\n  },\n  computed: {\n    templateType: function templateType() {\n      return 'tooltip';\n    },\n    templateClasses: function templateClasses() {\n      var _ref;\n\n      var variant = this.variant,\n          attachment = this.attachment,\n          templateType = this.templateType;\n      return [(_ref = {\n        // Disables pointer events to hide the tooltip when the user\n        // hovers over its content\n        noninteractive: !this.interactive\n      }, _defineProperty(_ref, \"b-\".concat(templateType, \"-\").concat(variant), variant), _defineProperty(_ref, \"bs-\".concat(templateType, \"-\").concat(attachment), attachment), _ref), this.customClass];\n    },\n    templateAttributes: function templateAttributes() {\n      var id = this.id;\n      return _objectSpread(_objectSpread({}, this.$parent.$parent.$attrs), {}, {\n        id: id,\n        role: 'tooltip',\n        tabindex: '-1'\n      }, this.scopedStyleAttrs);\n    },\n    templateListeners: function templateListeners() {\n      var _this = this;\n\n      // Used for hover/focus trigger listeners\n      return {\n        mouseenter:\n        /* istanbul ignore next */\n        function mouseenter(event) {\n          _this.$emit(EVENT_NAME_MOUSEENTER, event);\n        },\n        mouseleave:\n        /* istanbul ignore next */\n        function mouseleave(event) {\n          _this.$emit(EVENT_NAME_MOUSELEAVE, event);\n        },\n        focusin:\n        /* istanbul ignore next */\n        function focusin(event) {\n          _this.$emit(EVENT_NAME_FOCUSIN, event);\n        },\n        focusout:\n        /* istanbul ignore next */\n        function focusout(event) {\n          _this.$emit(EVENT_NAME_FOCUSOUT, event);\n        }\n      };\n    }\n  },\n  methods: {\n    renderTemplate: function renderTemplate(h) {\n      var title = this.title; // Title can be a scoped slot function\n\n      var $title = isFunction(title) ? title({}) : title; // Directive versions only\n\n      var domProps = this.html && !isFunction(title) ? {\n        innerHTML: title\n      } : {};\n      return h('div', {\n        staticClass: 'tooltip b-tooltip',\n        class: this.templateClasses,\n        attrs: this.templateAttributes,\n        on: this.templateListeners\n      }, [h('div', {\n        staticClass: 'arrow',\n        ref: 'arrow'\n      }), h('div', {\n        staticClass: 'tooltip-inner',\n        domProps: domProps\n      }, [$title])]);\n    }\n  }\n});","export var noop = function noop() {};"],"sourceRoot":""}